{"ast":null,"code":"var _jsxFileName = \"/Users/ashrafsiddiqui/Desktop/NewApp/src/contexts/filters/filtersContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useReducer } from 'react';\nimport productsData from '../../data/productsData';\nimport { brandsMenu, categoryMenu } from '../../data/filterBarData';\nimport filtersReducer from './filtersReducer'; // Filters-Context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst filtersContext = /*#__PURE__*/createContext(); // Initial State\n\nconst initialState = {\n  allProducts: [],\n  sortedValue: null,\n  updatedBrandsMenu: brandsMenu,\n  updatedCategoryMenu: categoryMenu,\n  selectedPrice: {\n    price: 0,\n    minPrice: 0,\n    maxPrice: 0\n  },\n  mobFilterBar: {\n    isMobSortVisible: false,\n    isMobFilterVisible: false\n  }\n}; // Filters-Provider Component\n\nconst FiltersProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(filtersReducer, initialState);\n  /* Loading All Products on the initial render */\n\n  useEffect(() => {\n    // making a shallow copy of the original products data, because we should never mutate the orginal data.\n    const products = [...productsData]; // finding the Max and Min Price, & setting them into the state.\n\n    const priceArr = products.map(item => item.finalPrice);\n    const minPrice = Math.min(...priceArr);\n    const maxPrice = Math.max(...priceArr);\n    dispatch({\n      type: 'LOAD_ALL_PRODUCTS',\n      payload: {\n        products,\n        minPrice,\n        maxPrice\n      }\n    });\n  }, []);\n  /* function for applying Filters - (sorting & filtering) */\n\n  const applyFilters = () => {\n    let updatedProducts = [...productsData];\n    /*==== Sorting ====*/\n\n    if (state.sortedValue) {\n      switch (state.sortedValue) {\n        case 'Latest':\n          updatedProducts = updatedProducts.slice(0, 6).map(item => item);\n          break;\n\n        case 'Featured':\n          updatedProducts = updatedProducts.filter(item => item.tag === 'featured-product');\n          break;\n\n        case 'Top Rated':\n          updatedProducts = updatedProducts.filter(item => item.rateCount > 4);\n          break;\n\n        case 'Price(Lowest First)':\n          updatedProducts = updatedProducts.sort((a, b) => a.finalPrice - b.finalPrice);\n          break;\n\n        case 'Price(Highest First)':\n          updatedProducts = updatedProducts.sort((a, b) => b.finalPrice - a.finalPrice);\n          break;\n\n        default:\n          throw new Error('Wrong Option Selected');\n      }\n    }\n    /*==== Filtering ====*/\n    // filter by Brands\n\n\n    const checkedBrandItems = state.updatedBrandsMenu.filter(item => {\n      return item.checked;\n    }).map(item => item.label.toLowerCase());\n\n    if (checkedBrandItems.length) {\n      updatedProducts = updatedProducts.filter(item => checkedBrandItems.includes(item.brand.toLowerCase()));\n    } // filter by Category\n\n\n    const checkedCategoryItems = state.updatedCategoryMenu.filter(item => {\n      return item.checked;\n    }).map(item => item.label.toLowerCase());\n\n    if (checkedCategoryItems.length) {\n      updatedProducts = updatedProducts.filter(item => checkedCategoryItems.includes(item.category.toLowerCase()));\n    } // filter by Price\n\n\n    if (state.selectedPrice) {\n      updatedProducts = updatedProducts.filter(item => {\n        return item.finalPrice <= state.selectedPrice.price;\n      });\n    }\n\n    dispatch({\n      type: 'FILTERED_PRODUCTS',\n      payload: {\n        updatedProducts\n      }\n    });\n  };\n\n  useEffect(() => {\n    applyFilters(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.sortedValue, state.updatedBrandsMenu, state.updatedCategoryMenu, state.selectedPrice]); // Dispatched Actions\n\n  const setSortedValue = sortValue => {\n    return dispatch({\n      type: 'SET_SORTED_VALUE',\n      payload: {\n        sortValue\n      }\n    });\n  };\n\n  const handleBrandsMenu = id => {\n    return dispatch({\n      type: 'CHECK_BRANDS_MENU',\n      payload: {\n        id\n      }\n    });\n  };\n\n  const handleCategoryMenu = id => {\n    return dispatch({\n      type: 'CHECK_CATEGORY_MENU',\n      payload: {\n        id\n      }\n    });\n  };\n\n  const handlePrice = event => {\n    const value = event.target.value;\n    return dispatch({\n      type: 'HANDLE_PRICE',\n      payload: {\n        value\n      }\n    });\n  };\n\n  const handleMobSortVisibility = toggle => {\n    return dispatch({\n      type: 'MOB_SORT_VISIBILITY',\n      payload: {\n        toggle\n      }\n    });\n  };\n\n  const handleMobFilterVisibility = toggle => {\n    return dispatch({\n      type: 'MOB_FILTER_VISIBILITY',\n      payload: {\n        toggle\n      }\n    });\n  };\n\n  const handleClearFilters = () => {\n    return dispatch({\n      type: 'CLEAR_FILTERS'\n    });\n  }; // Context values\n\n\n  const values = { ...state,\n    setSortedValue,\n    handleBrandsMenu,\n    handleCategoryMenu,\n    handlePrice,\n    handleMobSortVisibility,\n    handleMobFilterVisibility,\n    handleClearFilters\n  };\n  return /*#__PURE__*/_jsxDEV(filtersContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FiltersProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n\n_c = FiltersProvider;\nexport default filtersContext;\nexport { FiltersProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"FiltersProvider\");","map":{"version":3,"names":["createContext","useEffect","useReducer","productsData","brandsMenu","categoryMenu","filtersReducer","filtersContext","initialState","allProducts","sortedValue","updatedBrandsMenu","updatedCategoryMenu","selectedPrice","price","minPrice","maxPrice","mobFilterBar","isMobSortVisible","isMobFilterVisible","FiltersProvider","children","state","dispatch","products","priceArr","map","item","finalPrice","Math","min","max","type","payload","applyFilters","updatedProducts","slice","filter","tag","rateCount","sort","a","b","Error","checkedBrandItems","checked","label","toLowerCase","length","includes","brand","checkedCategoryItems","category","setSortedValue","sortValue","handleBrandsMenu","id","handleCategoryMenu","handlePrice","event","value","target","handleMobSortVisibility","toggle","handleMobFilterVisibility","handleClearFilters","values"],"sources":["/Users/ashrafsiddiqui/Desktop/NewApp/src/contexts/filters/filtersContext.js"],"sourcesContent":["import { createContext, useEffect, useReducer } from 'react';\nimport productsData from '../../data/productsData';\nimport { brandsMenu, categoryMenu } from '../../data/filterBarData';\nimport filtersReducer from './filtersReducer';\n\n// Filters-Context\nconst filtersContext = createContext();\n\n\n// Initial State\nconst initialState = {\n    allProducts: [],\n    sortedValue: null,\n    updatedBrandsMenu: brandsMenu,\n    updatedCategoryMenu: categoryMenu,\n    selectedPrice: {\n        price: 0,\n        minPrice: 0,\n        maxPrice: 0\n    },\n    mobFilterBar: {\n        isMobSortVisible: false,\n        isMobFilterVisible: false,\n    },\n};\n\n\n// Filters-Provider Component\nconst FiltersProvider = ({ children }) => {\n\n    const [state, dispatch] = useReducer(filtersReducer, initialState);\n\n\n    /* Loading All Products on the initial render */\n    useEffect(() => {\n\n        // making a shallow copy of the original products data, because we should never mutate the orginal data.\n        const products = [...productsData];\n\n        // finding the Max and Min Price, & setting them into the state.\n        const priceArr = products.map(item => item.finalPrice);\n        const minPrice = Math.min(...priceArr);\n        const maxPrice = Math.max(...priceArr);\n\n        dispatch({\n            type: 'LOAD_ALL_PRODUCTS',\n            payload: { products, minPrice, maxPrice }\n        });\n\n    }, []);\n\n\n    /* function for applying Filters - (sorting & filtering) */\n    const applyFilters = () => {\n\n        let updatedProducts = [...productsData];\n\n        /*==== Sorting ====*/\n        if (state.sortedValue) {\n            switch (state.sortedValue) {\n                case 'Latest':\n                    updatedProducts = updatedProducts.slice(0, 6).map(item => item);\n                    break;\n\n                case 'Featured':\n                    updatedProducts = updatedProducts.filter(item => item.tag === 'featured-product');\n                    break;\n\n                case 'Top Rated':\n                    updatedProducts = updatedProducts.filter(item => item.rateCount > 4);\n                    break;\n\n                case 'Price(Lowest First)':\n                    updatedProducts = updatedProducts.sort((a, b) => a.finalPrice - b.finalPrice);\n                    break;\n\n                case 'Price(Highest First)':\n                    updatedProducts = updatedProducts.sort((a, b) => b.finalPrice - a.finalPrice);\n                    break;\n\n                default:\n                    throw new Error('Wrong Option Selected');\n            }\n        }\n\n        /*==== Filtering ====*/\n\n        // filter by Brands\n        const checkedBrandItems = state.updatedBrandsMenu.filter(item => {\n            return item.checked;\n        }).map(item => item.label.toLowerCase());\n\n        if (checkedBrandItems.length) {\n            updatedProducts = updatedProducts.filter(item => checkedBrandItems.includes(item.brand.toLowerCase()));\n        }\n\n        // filter by Category\n        const checkedCategoryItems = state.updatedCategoryMenu.filter(item => {\n            return item.checked;\n        }).map(item => item.label.toLowerCase());\n\n        if (checkedCategoryItems.length) {\n            updatedProducts = updatedProducts.filter(item => checkedCategoryItems.includes(item.category.toLowerCase()));\n        }\n\n        // filter by Price\n        if (state.selectedPrice) {\n            updatedProducts = updatedProducts.filter(item => {\n                return item.finalPrice <= state.selectedPrice.price;\n            });\n        }\n\n        dispatch({\n            type: 'FILTERED_PRODUCTS',\n            payload: { updatedProducts }\n        });\n    };\n\n    useEffect(() => {\n        applyFilters();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [state.sortedValue, state.updatedBrandsMenu, state.updatedCategoryMenu, state.selectedPrice]);\n\n\n\n    // Dispatched Actions\n    const setSortedValue = (sortValue) => {\n        return dispatch({\n            type: 'SET_SORTED_VALUE',\n            payload: { sortValue }\n        });\n    };\n\n    const handleBrandsMenu = (id) => {\n        return dispatch({\n            type: 'CHECK_BRANDS_MENU',\n            payload: { id }\n        });\n    };\n\n    const handleCategoryMenu = (id) => {\n        return dispatch({\n            type: 'CHECK_CATEGORY_MENU',\n            payload: { id }\n        });\n    };\n\n    const handlePrice = (event) => {\n        const value = event.target.value;\n\n        return dispatch({\n            type: 'HANDLE_PRICE',\n            payload: { value }\n        });\n    };\n\n    const handleMobSortVisibility = (toggle) => {\n        return dispatch({\n            type: 'MOB_SORT_VISIBILITY',\n            payload: { toggle }\n        });\n    };\n\n    const handleMobFilterVisibility = (toggle) => {\n        return dispatch({\n            type: 'MOB_FILTER_VISIBILITY',\n            payload: { toggle }\n        });\n    };\n\n    const handleClearFilters = () => {\n        return dispatch({\n            type: 'CLEAR_FILTERS'\n        });\n    };\n\n\n    // Context values\n    const values = {\n        ...state,\n        setSortedValue,\n        handleBrandsMenu,\n        handleCategoryMenu,\n        handlePrice,\n        handleMobSortVisibility,\n        handleMobFilterVisibility,\n        handleClearFilters,\n    };\n\n\n    return (\n        <filtersContext.Provider value={values}>\n            {children}\n        </filtersContext.Provider>\n    );\n};\n\nexport default filtersContext;\nexport { FiltersProvider };"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAqD,OAArD;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,0BAAzC;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CAEA;;;AACA,MAAMC,cAAc,gBAAGP,aAAa,EAApC,C,CAGA;;AACA,MAAMQ,YAAY,GAAG;EACjBC,WAAW,EAAE,EADI;EAEjBC,WAAW,EAAE,IAFI;EAGjBC,iBAAiB,EAAEP,UAHF;EAIjBQ,mBAAmB,EAAEP,YAJJ;EAKjBQ,aAAa,EAAE;IACXC,KAAK,EAAE,CADI;IAEXC,QAAQ,EAAE,CAFC;IAGXC,QAAQ,EAAE;EAHC,CALE;EAUjBC,YAAY,EAAE;IACVC,gBAAgB,EAAE,KADR;IAEVC,kBAAkB,EAAE;EAFV;AAVG,CAArB,C,CAiBA;;AACA,MAAMC,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAEtC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,UAAU,CAACI,cAAD,EAAiBE,YAAjB,CAApC;EAGA;;EACAP,SAAS,CAAC,MAAM;IAEZ;IACA,MAAMuB,QAAQ,GAAG,CAAC,GAAGrB,YAAJ,CAAjB,CAHY,CAKZ;;IACA,MAAMsB,QAAQ,GAAGD,QAAQ,CAACE,GAAT,CAAaC,IAAI,IAAIA,IAAI,CAACC,UAA1B,CAAjB;IACA,MAAMb,QAAQ,GAAGc,IAAI,CAACC,GAAL,CAAS,GAAGL,QAAZ,CAAjB;IACA,MAAMT,QAAQ,GAAGa,IAAI,CAACE,GAAL,CAAS,GAAGN,QAAZ,CAAjB;IAEAF,QAAQ,CAAC;MACLS,IAAI,EAAE,mBADD;MAELC,OAAO,EAAE;QAAET,QAAF;QAAYT,QAAZ;QAAsBC;MAAtB;IAFJ,CAAD,CAAR;EAKH,CAfQ,EAeN,EAfM,CAAT;EAkBA;;EACA,MAAMkB,YAAY,GAAG,MAAM;IAEvB,IAAIC,eAAe,GAAG,CAAC,GAAGhC,YAAJ,CAAtB;IAEA;;IACA,IAAImB,KAAK,CAACZ,WAAV,EAAuB;MACnB,QAAQY,KAAK,CAACZ,WAAd;QACI,KAAK,QAAL;UACIyB,eAAe,GAAGA,eAAe,CAACC,KAAhB,CAAsB,CAAtB,EAAyB,CAAzB,EAA4BV,GAA5B,CAAgCC,IAAI,IAAIA,IAAxC,CAAlB;UACA;;QAEJ,KAAK,UAAL;UACIQ,eAAe,GAAGA,eAAe,CAACE,MAAhB,CAAuBV,IAAI,IAAIA,IAAI,CAACW,GAAL,KAAa,kBAA5C,CAAlB;UACA;;QAEJ,KAAK,WAAL;UACIH,eAAe,GAAGA,eAAe,CAACE,MAAhB,CAAuBV,IAAI,IAAIA,IAAI,CAACY,SAAL,GAAiB,CAAhD,CAAlB;UACA;;QAEJ,KAAK,qBAAL;UACIJ,eAAe,GAAGA,eAAe,CAACK,IAAhB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACb,UAAF,GAAec,CAAC,CAACd,UAAhD,CAAlB;UACA;;QAEJ,KAAK,sBAAL;UACIO,eAAe,GAAGA,eAAe,CAACK,IAAhB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACd,UAAF,GAAea,CAAC,CAACb,UAAhD,CAAlB;UACA;;QAEJ;UACI,MAAM,IAAIe,KAAJ,CAAU,uBAAV,CAAN;MAtBR;IAwBH;IAED;IAEA;;;IACA,MAAMC,iBAAiB,GAAGtB,KAAK,CAACX,iBAAN,CAAwB0B,MAAxB,CAA+BV,IAAI,IAAI;MAC7D,OAAOA,IAAI,CAACkB,OAAZ;IACH,CAFyB,EAEvBnB,GAFuB,CAEnBC,IAAI,IAAIA,IAAI,CAACmB,KAAL,CAAWC,WAAX,EAFW,CAA1B;;IAIA,IAAIH,iBAAiB,CAACI,MAAtB,EAA8B;MAC1Bb,eAAe,GAAGA,eAAe,CAACE,MAAhB,CAAuBV,IAAI,IAAIiB,iBAAiB,CAACK,QAAlB,CAA2BtB,IAAI,CAACuB,KAAL,CAAWH,WAAX,EAA3B,CAA/B,CAAlB;IACH,CAzCsB,CA2CvB;;;IACA,MAAMI,oBAAoB,GAAG7B,KAAK,CAACV,mBAAN,CAA0ByB,MAA1B,CAAiCV,IAAI,IAAI;MAClE,OAAOA,IAAI,CAACkB,OAAZ;IACH,CAF4B,EAE1BnB,GAF0B,CAEtBC,IAAI,IAAIA,IAAI,CAACmB,KAAL,CAAWC,WAAX,EAFc,CAA7B;;IAIA,IAAII,oBAAoB,CAACH,MAAzB,EAAiC;MAC7Bb,eAAe,GAAGA,eAAe,CAACE,MAAhB,CAAuBV,IAAI,IAAIwB,oBAAoB,CAACF,QAArB,CAA8BtB,IAAI,CAACyB,QAAL,CAAcL,WAAd,EAA9B,CAA/B,CAAlB;IACH,CAlDsB,CAoDvB;;;IACA,IAAIzB,KAAK,CAACT,aAAV,EAAyB;MACrBsB,eAAe,GAAGA,eAAe,CAACE,MAAhB,CAAuBV,IAAI,IAAI;QAC7C,OAAOA,IAAI,CAACC,UAAL,IAAmBN,KAAK,CAACT,aAAN,CAAoBC,KAA9C;MACH,CAFiB,CAAlB;IAGH;;IAEDS,QAAQ,CAAC;MACLS,IAAI,EAAE,mBADD;MAELC,OAAO,EAAE;QAAEE;MAAF;IAFJ,CAAD,CAAR;EAIH,CA/DD;;EAiEAlC,SAAS,CAAC,MAAM;IACZiC,YAAY,GADA,CAEZ;EACH,CAHQ,EAGN,CAACZ,KAAK,CAACZ,WAAP,EAAoBY,KAAK,CAACX,iBAA1B,EAA6CW,KAAK,CAACV,mBAAnD,EAAwEU,KAAK,CAACT,aAA9E,CAHM,CAAT,CA1FsC,CAiGtC;;EACA,MAAMwC,cAAc,GAAIC,SAAD,IAAe;IAClC,OAAO/B,QAAQ,CAAC;MACZS,IAAI,EAAE,kBADM;MAEZC,OAAO,EAAE;QAAEqB;MAAF;IAFG,CAAD,CAAf;EAIH,CALD;;EAOA,MAAMC,gBAAgB,GAAIC,EAAD,IAAQ;IAC7B,OAAOjC,QAAQ,CAAC;MACZS,IAAI,EAAE,mBADM;MAEZC,OAAO,EAAE;QAAEuB;MAAF;IAFG,CAAD,CAAf;EAIH,CALD;;EAOA,MAAMC,kBAAkB,GAAID,EAAD,IAAQ;IAC/B,OAAOjC,QAAQ,CAAC;MACZS,IAAI,EAAE,qBADM;MAEZC,OAAO,EAAE;QAAEuB;MAAF;IAFG,CAAD,CAAf;EAIH,CALD;;EAOA,MAAME,WAAW,GAAIC,KAAD,IAAW;IAC3B,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;IAEA,OAAOrC,QAAQ,CAAC;MACZS,IAAI,EAAE,cADM;MAEZC,OAAO,EAAE;QAAE2B;MAAF;IAFG,CAAD,CAAf;EAIH,CAPD;;EASA,MAAME,uBAAuB,GAAIC,MAAD,IAAY;IACxC,OAAOxC,QAAQ,CAAC;MACZS,IAAI,EAAE,qBADM;MAEZC,OAAO,EAAE;QAAE8B;MAAF;IAFG,CAAD,CAAf;EAIH,CALD;;EAOA,MAAMC,yBAAyB,GAAID,MAAD,IAAY;IAC1C,OAAOxC,QAAQ,CAAC;MACZS,IAAI,EAAE,uBADM;MAEZC,OAAO,EAAE;QAAE8B;MAAF;IAFG,CAAD,CAAf;EAIH,CALD;;EAOA,MAAME,kBAAkB,GAAG,MAAM;IAC7B,OAAO1C,QAAQ,CAAC;MACZS,IAAI,EAAE;IADM,CAAD,CAAf;EAGH,CAJD,CA9IsC,CAqJtC;;;EACA,MAAMkC,MAAM,GAAG,EACX,GAAG5C,KADQ;IAEX+B,cAFW;IAGXE,gBAHW;IAIXE,kBAJW;IAKXC,WALW;IAMXI,uBANW;IAOXE,yBAPW;IAQXC;EARW,CAAf;EAYA,oBACI,QAAC,cAAD,CAAgB,QAAhB;IAAyB,KAAK,EAAEC,MAAhC;IAAA,UACK7C;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAvKD;;GAAMD,e;;KAAAA,e;AAyKN,eAAeb,cAAf;AACA,SAASa,eAAT"},"metadata":{},"sourceType":"module"}